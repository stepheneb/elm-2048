{"version":3,"sources":["Main.elm","registerServiceWorker.js","touchInputManager.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","A2","A3","A4","A5","A6","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","_Utils_Tuple2","_Debug_crash","key","$","$elm$core$Dict$toList","_Utils_equal","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple0","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_toArray","_List_map2","_List_sortWith","sort","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","identifier","Error","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_String_join","sep","strs","join","_String_slice","start","end","str","slice","_String_contains","sub","indexOf","_String_startsWith","_String_indexes","subLen","is","_Json_decodePrim","decoder","_Json_decodeInt","value","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_decodeBool","_Json_decodeValue","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_mapMany","decoders","g","_Json_andThen","callback","h","_Json_map1","d1","_Json_map5","d2","d3","d4","d5","_Json_map8","F9","d6","d7","d8","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","index","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","answer","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_addField","object","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Process_sleep","time","id","setTimeout","clearTimeout","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_Platform_checkPortName","name","_Platform_outgoingPortMap","tagger","_Platform_setupOutgoingPort","subs","converter","r","cmdList","currentSubs","subscribe","unsubscribe","splice","_VirtualDom_divertHrefToApp","_Platform_incomingPortMap","finalTagger","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNode","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_lazy","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","stopPropagation","aj","currentEventNode","ag","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_document","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aV","a2","a0","initialModel","divertHrefToApp","ah","view","a3","title","bodyNode","body","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","doc","nextNode","aN","_VirtualDom_diff","a1","cancelAnimationFrame","requestAnimationFrame","_Browser_getUrl","$elm$url$Url$fromString","location","href","_Browser_pushUrl","url","$elm$core$Task$perform","$elm$core$Basics$never","history","pushState","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","$elm$core$List$cons","$elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","$elm$core$Basics$add","$elm$core$String$fromInt","number","$elm$core$String$join","chunks","$elm$core$List$foldl","$elm$core$List$length","_v0","$elm$core$List$map2","$elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","$elm$core$List$range","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Basics$eq","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","$elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","$elm$json$Json$Decode$map","$elm$json$Json$Decode$succeed","$elm$core$Basics$identity","$elm$url$Url$Url","protocol","host","port_","path","query","fragment","aq","aw","ay","aB","aC","$elm$core$String$contains","$elm$core$String$slice","$elm$core$String$dropLeft","$elm$core$String$indexes","$elm$core$String$isEmpty","$elm$core$String$left","$elm$url$Url$chompBeforePath","params","_v1","total","code0","charCodeAt","code","$elm$core$String$toInt","$elm$url$Url$chompBeforeQuery","$elm$url$Url$chompBeforeFragment","$elm$url$Url$chompAfterProtocol","$elm$core$String$startsWith","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Task$sequence","tasks","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","commands","millisToPosix","$elm$core$Task$command","toMessage","$elm$json$Json$Decode$decodeValue","$author$project$Main$GameState","tiles","score","bestScore","status","nextTileKey","H","K","$elm$json$Json$Decode$field","$elm$json$Json$Decode$int","$elm$json$Json$Decode$map5","$elm$json$Json$Decode$andThen","$elm$json$Json$Decode$string","$author$project$Main$statusDecoder","$elm$json$Json$Decode$bool","$author$project$Main$gameStateDecoder","F8","row","col","locIndex","_new","merged","moved","P","R","G","Z","$author$project$Main$defaultGameState","$author$project$Main$initialModel","flags","navKey","$author$project$Main$decodeGameState","$author$project$Main$parseGameState","ae","ak","$author$project$Main$AddTile","$elm$core$Dict$foldl","right","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Dict$balance","color","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Dict$moveRedLeft","_v4","_v5","_v2","rlL","rlR","$elm$core$Dict$moveRedRight","$elm$core$Dict$removeHelpPrepEQGT","F7","targetKey","_v2$2","$elm$core$Dict$removeMin","lLeft","nRight","$elm$core$Dict$removeHelp","_v7","$elm$core$Dict$removeHelpEQGT","$elm$core$Dict$getMin","$elm$core$Dict$remove","$elm$core$Dict$diff","t1","t2","$elm$core$Set$diff","$elm$core$Dict$empty","$elm$core$Set$empty","$elm$core$Basics$compare","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","$elm$core$Dict$insert","$elm$core$Set$insert","$elm$core$Set$fromList","$elm$random$Random$Seed","$elm$random$Random$next","incr","$elm$time$Time$now","Date","now","$elm$random$Random$init","$elm$random$Random$initialSeed","$elm$random$Random$step","seed","$elm$random$Random$onEffects","rest","newSeed","$elm$random$Random$onSelfMsg","$elm$random$Random$map","genA","seed0","seed1","$elm$random$Random$command","$elm$random$Random$generate","generator","$author$project$Main$lessThenMax","$elm$core$Platform$Cmd$none","$author$project$Main$changeTiles","$elm$core$List$sortWith","$author$project$Main$sortTilesByRowsCols","rowIndex","index2","index1","$elm$core$Basics$abs","$elm$random$Random$peel","word","$elm$random$Random$float","range","n1","$elm$random$Random$map2","genB","_v3","seed2","$author$project$Main$tileAtLocationIndex","indx","$elm$random$Random$addOne","$elm$random$Random$getByWeight","others","countdown","weight","second","otherOthers","$elm$random$Random$weighted","first","normalize","$elm$random$Random$uniform","valueList","$author$project$Main$tileGenerator","firstLocation","restOfLocations","num","valueFrom","$author$project$Main$generateNewTile","locations","placedIndicesSet","allIndicesSet","keyList","$author$project$Main$emptyLocations","$author$project$Main$lessThenTwo","$author$project$Main$init","$author$project$Main$startGame","$elm$core$Platform$Sub$batch","$author$project$Main$Move","$author$project$Main$directionDecoder","$author$project$Main$handleSwipe","$author$project$Main$keyDecoderToMoveMsg","$elm$browser$Browser$Events$MySub","$elm$browser$Browser$Events$State","pids","ax","aH","$elm$browser$Browser$Events$init","$elm$browser$Browser$Events$addKey","$elm$core$Dict$fromList","assocs","$elm$core$Process$kill","$elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","rKey","rValue","stepState","lKey","lValue","leftovers","intermediateResult","$elm$browser$Browser$Events$Event","ap","$elm$core$Platform$sendToSelf","$elm$browser$Browser$Events$spawn","$elm$core$Dict$union","$elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","pid","lives","stepBoth","newSubs","livePids","makeNewPids","$elm$core$List$maybeCons","mx","$elm$core$List$filterMap","messages","exports","onUrlChange","onUrlRequest","$elm$browser$Browser$Events$subscription","$elm$browser$Browser$Events$onKeyDown","$elm$json$Json$Decode$value","$author$project$Main$swipeDirectionArrow","subList","send","incomingValue","$elm$core$Basics$composeR","$author$project$Main$notMoved","tile","$author$project$Main$notNew","$author$project$Main$addTile","gs","newGs","$elm$browser$Browser$Navigation$pushUrl","$author$project$Main$cacheGameState","_Platform_outgoingPort","$elm$json$Json$Encode$string","$elm$json$Json$Encode$int","$elm$json$Json$Encode$object","pairs","obj","$elm$json$Json$Encode$list","entries","_Json_addEntry","$elm$json$Json$Encode$bool","$author$project$Main$tileEncoder","$author$project$Main$saveGameState","statusToStr","$author$project$Main$gameStateEncoder","$elm$url$Url$addPort","maybePort","starter","$elm$url$Url$addPrefixed","prefix","maybeSegment","$elm$core$List$filter","isGood","$elm$core$List$any","isOkay","$elm$core$List$append","$elm$core$List$concat","lists","$author$project$Main$maybeMoveTile","$author$project$Main$mergeTilesHelp","checked","mergeTilesHelp","merge","t3","t4","ts","$author$project$Main$mergeTiles","$author$project$Main$tilesInRows","direction","rowOrder","sortedrow","$author$project$Main$moveLeft","squashLeft","$author$project$Main$tilesInColumns","colOrder","column","$author$project$Main$moveUp","squashUp","$author$project$Main$movePossible","can","move","$author$project$Main$gameStatus","gridFull","anyWinningTile","$author$project$Main$moveDown","squashDown","$author$project$Main$moveRight","squashRight","$author$project$Main$GenerateNewTile","$elm$core$Basics$always","$elm$core$Process$sleep","$author$project$Main$userIsPlaying","$author$project$Main$notMerged","$author$project$Main$updateGameState","$author$project$Main$updateWithMove","changed","playing","$author$project$Main$update","$author$project$Main$newGameState","newScore","$author$project$Main$updateScoresAndGameStatus","maybeDirection","urlRequest","err","reload","$elm$browser$Browser$Navigation$load","$elm$url$Url$toString","$author$project$Main$NewGame","$elm$html$Html$button","$elm$html$Html$Attributes$stringProperty","$elm$html$Html$Attributes$class","$elm$html$Html$div","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$on","$elm$html$Html$Events$onClick","$elm$html$Html$p","$elm$html$Html$strong","$elm$html$Html$text","$author$project$Main$aboveGame","$author$project$Main$divider","$author$project$Main$gameExplanation","$elm$html$Html$a","$elm$html$Html$Attributes$href","test","replace","$elm$html$Html$Attributes$target","$author$project$Main$gameFooter","$elm$html$Html$h1","$author$project$Main$KeepGoing","$author$project$Main$gameNotes","$author$project$Main$gridRow","$author$project$Main$gridContainer","$elm$html$Html$Lazy$lazy","$author$project$Main$singleTile","$author$project$Main$newTileClassStr","$author$project$Main$mergedTileClassStr","$author$project$Main$superTileClassStr","$author$project$Main$tileClassStr","$author$project$Main$singleKeyedTile","$elm$html$Html$Keyed$node","_VirtualDom_noScript","Main","aY","aZ","$author$project$Main$gameStatusClassStr","$author$project$Main$gameStatusMessage","$author$project$Main$gameMessage","$author$project$Main$listOfTiles","navigator","userAgent","ctrlKey","metaKey","shiftKey","button","target","hasAttribute","next","$elm$browser$Browser$External","$author$project$Main$main","_Platform_mergeExportsProd","this","isLocalhost","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","error","TouchInputManager","app","msPointerEnabled","eventTouchstart","eventTouchmove","eventTouchend","listen","prototype","touchStartClientX","touchStartClientY","self","gridContainer","getElementsByClassName","touches","targetTouches","pageX","pageY","clientX","clientY","touchEndClientX","touchEndClientY","changedTouches","dx","absDx","abs","dy","absDy","swipeDirectionArrow","gameState","JSON","parse","localStorage","getItem","Elm","getElementById","cacheGameState","setItem","stringify","URL","process","origin","concat","fetch","response","headers","ready","unregister","checkValidServiceWorker","registerServiceWorker","touchInputManager","includes"],"mappings":"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","file":"static/js/main.81c1e22a.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ai.Q === region.ao.Q)\n\t{\n\t\treturn 'on line ' + region.ai.Q;\n\t}\n\treturn 'on lines ' + region.ai.Q + ' through ' + region.ao.Q;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aV,\n\t\timpl.a2,\n\t\timpl.a0,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tx: func(record.x),\n\t\taj: record.aj,\n\t\tag: record.ag\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.x;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.aj;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ag) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aV,\n\t\timpl.a2,\n\t\timpl.a0,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a3;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aV,\n\t\timpl.a2,\n\t\timpl.a0,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.ah && impl.ah(sendToApp)\n\t\t\tvar view = impl.a3;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aN);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.a1) && (_VirtualDom_doc.title = title = doc.a1);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aY;\n\tvar onUrlRequest = impl.aZ;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tah: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aB === next.aB\n\t\t\t\t\t\t\t&& curr.as === next.as\n\t\t\t\t\t\t\t&& curr.ay.a === next.ay.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taV: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aV, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta3: impl.a3,\n\t\ta2: impl.a2,\n\t\ta0: impl.a0\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aT: 'hidden', aO: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aT: 'mozHidden', aO: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aT: 'msHidden', aO: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aT: 'webkitHidden', aO: 'webkitvisibilitychange' }\n\t\t: { aT: 'hidden', aO: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taG: _Browser_getScene(),\n\t\taJ: {\n\t\t\tab: _Browser_window.pageXOffset,\n\t\t\tac: _Browser_window.pageYOffset,\n\t\t\tN: _Browser_doc.documentElement.clientWidth,\n\t\t\tF: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tN: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tF: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taG: {\n\t\t\t\tN: node.scrollWidth,\n\t\t\t\tF: node.scrollHeight\n\t\t\t},\n\t\t\taJ: {\n\t\t\t\tab: node.scrollLeft,\n\t\t\t\tac: node.scrollTop,\n\t\t\t\tN: node.clientWidth,\n\t\t\t\tF: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taG: _Browser_getScene(),\n\t\t\taJ: {\n\t\t\t\tab: x,\n\t\t\t\tac: y,\n\t\t\t\tN: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tF: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taP: {\n\t\t\t\tab: x + rect.left,\n\t\t\t\tac: y + rect.top,\n\t\t\t\tN: rect.width,\n\t\t\t\tF: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = $elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\nvar $author$project$Main$LinkClicked = function (a) {\n\treturn {$: 5, a: a};\n};\nvar $author$project$Main$UrlChanged = function (a) {\n\treturn {$: 6, a: a};\n};\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.b) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.d),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.d);\n\t\t} else {\n\t\t\tvar treeLen = builder.b * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.e) : builder.e;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.b);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.d) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.d);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{e: nodeList, b: (len / $elm$core$Array$branchFactor) | 0, d: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {aq: fragment, as: host, aw: path, ay: port_, aB: protocol, aC: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$application = _Browser_application;\nvar $elm$json$Json$Decode$decodeValue = _Json_run;\nvar $author$project$Main$GameState = F5(\n\tfunction (tiles, score, bestScore, status, nextTileKey) {\n\t\treturn {w: bestScore, H: nextTileKey, K: score, r: status, a: tiles};\n\t});\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$int = _Json_decodeInt;\nvar $elm$json$Json$Decode$map5 = _Json_map5;\nvar $elm$json$Json$Decode$andThen = _Json_andThen;\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$json$Json$Decode$fail = _Json_fail;\nvar $author$project$Main$fromResult = function (result) {\n\tif (!result.$) {\n\t\tvar a = result.a;\n\t\treturn $elm$json$Json$Decode$succeed(a);\n\t} else {\n\t\tvar errorMessage = result.a;\n\t\treturn $elm$json$Json$Decode$fail(errorMessage);\n\t}\n};\nvar $author$project$Main$KeepPlaying = 3;\nvar $author$project$Main$Over = 1;\nvar $author$project$Main$Playing = 0;\nvar $author$project$Main$Won = 2;\nvar $author$project$Main$parseStatus = function (string) {\n\tswitch (string) {\n\t\tcase 'Playing':\n\t\t\treturn $elm$core$Result$Ok(0);\n\t\tcase 'Over':\n\t\t\treturn $elm$core$Result$Ok(1);\n\t\tcase 'Won':\n\t\t\treturn $elm$core$Result$Ok(2);\n\t\tcase 'KeepPlaying':\n\t\t\treturn $elm$core$Result$Ok(3);\n\t\tdefault:\n\t\t\treturn $elm$core$Result$Err('Invalid status: ' + string);\n\t}\n};\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $author$project$Main$statusDecoder = A2(\n\t$elm$json$Json$Decode$andThen,\n\tA2($elm$core$Basics$composeL, $author$project$Main$fromResult, $author$project$Main$parseStatus),\n\t$elm$json$Json$Decode$string);\nvar $elm$json$Json$Decode$list = _Json_decodeList;\nvar $author$project$Main$Tile = F8(\n\tfunction (value, row, col, locIndex, _new, merged, moved, key) {\n\t\treturn {g: col, P: key, R: locIndex, t: merged, G: moved, Z: _new, h: row, i: value};\n\t});\nvar $elm$json$Json$Decode$bool = _Json_decodeBool;\nvar $elm$json$Json$Decode$map8 = _Json_map8;\nvar $author$project$Main$tileDecoder = A9(\n\t$elm$json$Json$Decode$map8,\n\t$author$project$Main$Tile,\n\tA2($elm$json$Json$Decode$field, 'value', $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$field, 'row', $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$field, 'col', $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$field, 'locIndex', $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$field, 'new', $elm$json$Json$Decode$bool),\n\tA2($elm$json$Json$Decode$field, 'merged', $elm$json$Json$Decode$bool),\n\tA2($elm$json$Json$Decode$field, 'moved', $elm$json$Json$Decode$bool),\n\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$int));\nvar $author$project$Main$tileListDecoder = $elm$json$Json$Decode$list($author$project$Main$tileDecoder);\nvar $author$project$Main$gameStateDecoder = A6(\n\t$elm$json$Json$Decode$map5,\n\t$author$project$Main$GameState,\n\tA2($elm$json$Json$Decode$field, 'tiles', $author$project$Main$tileListDecoder),\n\tA2($elm$json$Json$Decode$field, 'score', $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$field, 'bestScore', $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$field, 'status', $author$project$Main$statusDecoder),\n\tA2($elm$json$Json$Decode$field, 'nextTileKey', $elm$json$Json$Decode$int));\nvar $author$project$Main$decodeGameState = function (flags) {\n\treturn A2($elm$json$Json$Decode$decodeValue, $author$project$Main$gameStateDecoder, flags);\n};\nvar $author$project$Main$defaultGameState = {w: 0, H: 1, K: 0, r: 0, a: _List_Nil};\nvar $author$project$Main$parseGameState = function (flags) {\n\tvar _v0 = $author$project$Main$decodeGameState(flags);\n\tif (!_v0.$) {\n\t\tvar gameState = _v0.a;\n\t\treturn gameState;\n\t} else {\n\t\tvar e = _v0.a;\n\t\treturn $author$project$Main$defaultGameState;\n\t}\n};\nvar $author$project$Main$initialModel = F3(\n\tfunction (flags, url, navKey) {\n\t\treturn {\n\t\t\tk: $author$project$Main$parseGameState(flags),\n\t\t\tae: navKey,\n\t\t\tak: url\n\t\t};\n\t});\nvar $author$project$Main$AddTile = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Set$Set_elm_builtin = $elm$core$Basics$identity;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar $elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.e.d.$ === -1) && (!dict.e.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar lLeft = _v1.d;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v2 = dict.e;\n\t\t\tvar rClr = _v2.a;\n\t\t\tvar rK = _v2.b;\n\t\t\tvar rV = _v2.c;\n\t\t\tvar rLeft = _v2.d;\n\t\t\tvar _v3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _v2.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v4 = dict.d;\n\t\t\tvar lClr = _v4.a;\n\t\t\tvar lK = _v4.b;\n\t\t\tvar lV = _v4.c;\n\t\t\tvar lLeft = _v4.d;\n\t\t\tvar lRight = _v4.e;\n\t\t\tvar _v5 = dict.e;\n\t\t\tvar rClr = _v5.a;\n\t\t\tvar rK = _v5.b;\n\t\t\tvar rV = _v5.c;\n\t\t\tvar rLeft = _v5.d;\n\t\t\tvar rRight = _v5.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.d.d.$ === -1) && (!dict.d.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar _v2 = _v1.d;\n\t\t\tvar _v3 = _v2.a;\n\t\t\tvar llK = _v2.b;\n\t\t\tvar llV = _v2.c;\n\t\t\tvar llLeft = _v2.d;\n\t\t\tvar llRight = _v2.e;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v4 = dict.e;\n\t\t\tvar rClr = _v4.a;\n\t\t\tvar rK = _v4.b;\n\t\t\tvar rV = _v4.c;\n\t\t\tvar rLeft = _v4.d;\n\t\t\tvar rRight = _v4.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v5 = dict.d;\n\t\t\tvar lClr = _v5.a;\n\t\t\tvar lK = _v5.b;\n\t\t\tvar lV = _v5.c;\n\t\t\tvar lLeft = _v5.d;\n\t\t\tvar lRight = _v5.e;\n\t\t\tvar _v6 = dict.e;\n\t\t\tvar rClr = _v6.a;\n\t\t\tvar rK = _v6.b;\n\t\t\tvar rV = _v6.c;\n\t\t\tvar rLeft = _v6.d;\n\t\t\tvar rRight = _v6.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\tvar _v1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));\n\t\t} else {\n\t\t\t_v2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === -1) && (right.a === 1)) {\n\t\t\t\t\tif (right.d.$ === -1) {\n\t\t\t\t\t\tif (right.d.a === 1) {\n\t\t\t\t\t\t\tvar _v3 = right.a;\n\t\t\t\t\t\t\tvar _v4 = right.d;\n\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v6 = right.a;\n\t\t\t\t\t\tvar _v7 = right.d;\n\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar $elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor === 1) {\n\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\tvar _v3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _v4 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_v4.$ === -1) {\n\t\t\t\t\tvar nColor = _v4.a;\n\t\t\t\t\tvar nKey = _v4.b;\n\t\t\t\t\tvar nValue = _v4.c;\n\t\t\t\t\tvar nLeft = _v4.d;\n\t\t\t\t\tvar nRight = _v4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar $elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === -1) && (left.a === 1)) {\n\t\t\t\t\tvar _v4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\t\t\tvar _v6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v7 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_v7.$ === -1) {\n\t\t\t\t\t\t\tvar nColor = _v7.a;\n\t\t\t\t\t\t\tvar nKey = _v7.b;\n\t\t\t\t\t\t\tvar nValue = _v7.c;\n\t\t\t\t\t\t\tvar nLeft = _v7.d;\n\t\t\t\t\t\t\tvar nRight = _v7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -1) {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _v1 = $elm$core$Dict$getMin(right);\n\t\t\t\tif (_v1.$ === -1) {\n\t\t\t\t\tvar minKey = _v1.b;\n\t\t\t\t\tvar minValue = _v1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar $elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$diff = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (k, v, t) {\n\t\t\t\t\treturn A2($elm$core$Dict$remove, k, t);\n\t\t\t\t}),\n\t\t\tt1,\n\t\t\tt2);\n\t});\nvar $elm$core$Set$diff = F2(\n\tfunction (_v0, _v1) {\n\t\tvar dict1 = _v0;\n\t\tvar dict2 = _v1;\n\t\treturn A2($elm$core$Dict$diff, dict1, dict2);\n\t});\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$core$Set$empty = $elm$core$Dict$empty;\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Set$insert = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0;\n\t\treturn A3($elm$core$Dict$insert, key, 0, dict);\n\t});\nvar $elm$core$Set$fromList = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);\n};\nvar $elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $author$project$Main$maxTiles = 16;\nvar $author$project$Main$emptyLocations = function (tiles) {\n\tvar placedIndicesSet = $elm$core$Set$fromList(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.R;\n\t\t\t},\n\t\t\ttiles));\n\tvar allIndicesSet = $elm$core$Set$fromList(\n\t\tA2($elm$core$List$range, 1, $author$project$Main$maxTiles));\n\treturn $elm$core$List$isEmpty(tiles) ? A2($elm$core$List$range, 1, $author$project$Main$maxTiles) : $elm$core$Set$toList(\n\t\tA2($elm$core$Set$diff, allIndicesSet, placedIndicesSet));\n};\nvar $elm$random$Random$Generate = $elm$core$Basics$identity;\nvar $elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$random$Random$next = function (_v0) {\n\tvar state0 = _v0.a;\n\tvar incr = _v0.b;\n\treturn A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar $elm$random$Random$initialSeed = function (x) {\n\tvar _v0 = $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _v0.a;\n\tvar incr = _v0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, state2, incr));\n};\nvar $elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$customZone = $elm$time$Time$Zone;\nvar $elm$time$Time$Posix = $elm$core$Basics$identity;\nvar $elm$time$Time$millisToPosix = $elm$core$Basics$identity;\nvar $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);\nvar $elm$time$Time$posixToMillis = function (_v0) {\n\tvar millis = _v0;\n\treturn millis;\n};\nvar $elm$random$Random$init = A2(\n\t$elm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn $elm$core$Task$succeed(\n\t\t\t$elm$random$Random$initialSeed(\n\t\t\t\t$elm$time$Time$posixToMillis(time)));\n\t},\n\t$elm$time$Time$now);\nvar $elm$random$Random$step = F2(\n\tfunction (_v0, seed) {\n\t\tvar generator = _v0;\n\t\treturn generator(seed);\n\t});\nvar $elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn $elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _v1 = A2($elm$random$Random$step, generator, seed);\n\t\t\tvar value = _v1.a;\n\t\t\tvar newSeed = _v1.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar $elm$random$Random$onSelfMsg = F3(\n\tfunction (_v0, _v1, seed) {\n\t\treturn $elm$core$Task$succeed(seed);\n\t});\nvar $elm$random$Random$Generator = $elm$core$Basics$identity;\nvar $elm$random$Random$map = F2(\n\tfunction (func, _v0) {\n\t\tvar genA = _v0;\n\t\treturn function (seed0) {\n\t\t\tvar _v1 = genA(seed0);\n\t\t\tvar a = _v1.a;\n\t\t\tvar seed1 = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar $elm$random$Random$cmdMap = F2(\n\tfunction (func, _v0) {\n\t\tvar generator = _v0;\n\t\treturn A2($elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager($elm$random$Random$init, $elm$random$Random$onEffects, $elm$random$Random$onSelfMsg, $elm$random$Random$cmdMap);\nvar $elm$random$Random$command = _Platform_leaf('Random');\nvar $elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn $elm$random$Random$command(\n\t\t\tA2($elm$random$Random$map, tagger, generator));\n\t});\nvar $author$project$Main$lessThenMax = function (tiles) {\n\treturn _Utils_cmp(\n\t\t$elm$core$List$length(tiles),\n\t\t$author$project$Main$maxTiles) < 0;\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Main$changeTiles = F2(\n\tfunction (func, tiles) {\n\t\treturn A2($elm$core$List$map, func, tiles);\n\t});\nvar $elm$core$List$sortWith = _List_sortWith;\nvar $author$project$Main$sortTilesByRowsCols = function (tiles) {\n\tvar rowIndex = F2(\n\t\tfunction (row, col) {\n\t\t\treturn col + ((row - 1) * 4);\n\t\t});\n\tvar rowColOrder = F2(\n\t\tfunction (t1, t2) {\n\t\t\tvar index2 = A2(rowIndex, t2.h, t2.g);\n\t\t\tvar index1 = A2(rowIndex, t1.h, t1.g);\n\t\t\treturn (_Utils_cmp(index1, index2) > 0) ? 2 : ((_Utils_cmp(index1, index2) < 0) ? 0 : 1);\n\t\t});\n\treturn A2(\n\t\t$author$project$Main$changeTiles,\n\t\tfunction (t) {\n\t\t\treturn _Utils_update(\n\t\t\t\tt,\n\t\t\t\t{\n\t\t\t\t\tR: A2(rowIndex, t.h, t.g)\n\t\t\t\t});\n\t\t},\n\t\tA2($elm$core$List$sortWith, rowColOrder, tiles));\n};\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $elm$random$Random$peel = function (_v0) {\n\tvar state = _v0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar $elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = $elm$random$Random$next(seed0);\n\t\t\tvar range = $elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = $elm$random$Random$peel(seed1);\n\t\t\tvar n0 = $elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 134217728.0) + lo) / 9007199254740992.0;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\t$elm$random$Random$next(seed1));\n\t\t};\n\t});\nvar $elm$random$Random$map2 = F3(\n\tfunction (func, _v0, _v1) {\n\t\tvar genA = _v0;\n\t\tvar genB = _v1;\n\t\treturn function (seed0) {\n\t\t\tvar _v2 = genA(seed0);\n\t\t\tvar a = _v2.a;\n\t\t\tvar seed1 = _v2.b;\n\t\t\tvar _v3 = genB(seed1);\n\t\t\tvar b = _v3.a;\n\t\t\tvar seed2 = _v3.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(func, a, b),\n\t\t\t\tseed2);\n\t\t};\n\t});\nvar $author$project$Main$tileAtLocationIndex = F2(\n\tfunction (value, indx) {\n\t\treturn {g: ((indx - 1) % 4) + 1, P: 0, R: indx, t: false, G: false, Z: true, h: (((indx - 1) / 4) | 0) + 1, i: value};\n\t});\nvar $elm$random$Random$addOne = function (value) {\n\treturn _Utils_Tuple2(1, value);\n};\nvar $elm$random$Random$getByWeight = F3(\n\tfunction (_v0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _v0.a;\n\t\t\tvar value = _v0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\t$elm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_v0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - $elm$core$Basics$abs(weight);\n\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$sum = function (numbers) {\n\treturn A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);\n};\nvar $elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_v0) {\n\t\t\tvar weight = _v0.a;\n\t\t\treturn $elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + $elm$core$List$sum(\n\t\t\tA2($elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\t$elm$random$Random$map,\n\t\t\tA2($elm$random$Random$getByWeight, first, others),\n\t\t\tA2($elm$random$Random$float, 0, total));\n\t});\nvar $elm$random$Random$uniform = F2(\n\tfunction (value, valueList) {\n\t\treturn A2(\n\t\t\t$elm$random$Random$weighted,\n\t\t\t$elm$random$Random$addOne(value),\n\t\t\tA2($elm$core$List$map, $elm$random$Random$addOne, valueList));\n\t});\nvar $author$project$Main$tileGenerator = F2(\n\tfunction (firstLocation, restOfLocations) {\n\t\tvar valueFrom = function (num) {\n\t\t\treturn (num > 0.9) ? 4 : 2;\n\t\t};\n\t\treturn A3(\n\t\t\t$elm$random$Random$map2,\n\t\t\tF2(\n\t\t\t\tfunction (locIndex, num) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$author$project$Main$tileAtLocationIndex,\n\t\t\t\t\t\tvalueFrom(num),\n\t\t\t\t\t\tlocIndex);\n\t\t\t\t}),\n\t\t\tA2($elm$random$Random$uniform, firstLocation, restOfLocations),\n\t\t\tA2($elm$random$Random$float, 0, 1));\n\t});\nvar $author$project$Main$generateNewTile = function (tiles) {\n\tvar locations = $author$project$Main$emptyLocations(\n\t\t$author$project$Main$sortTilesByRowsCols(tiles));\n\tif ($author$project$Main$lessThenMax(tiles)) {\n\t\tif (!locations.b) {\n\t\t\treturn $elm$core$Platform$Cmd$none;\n\t\t} else {\n\t\t\tvar l = locations.a;\n\t\t\tvar ls = locations.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$random$Random$generate,\n\t\t\t\t$author$project$Main$AddTile,\n\t\t\t\tA2($author$project$Main$tileGenerator, l, ls));\n\t\t}\n\t} else {\n\t\treturn $elm$core$Platform$Cmd$none;\n\t}\n};\nvar $author$project$Main$lessThenTwo = function (a) {\n\treturn $elm$core$List$length(a) < 2;\n};\nvar $author$project$Main$startGame = function (model) {\n\treturn $author$project$Main$lessThenTwo(model.k.a) ? $author$project$Main$generateNewTile(model.k.a) : $elm$core$Platform$Cmd$none;\n};\nvar $author$project$Main$init = F3(\n\tfunction (flags, url, navKey) {\n\t\tvar model = A3($author$project$Main$initialModel, flags, url, navKey);\n\t\treturn _Utils_Tuple2(\n\t\t\tmodel,\n\t\t\t$author$project$Main$startGame(model));\n\t});\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $author$project$Main$Move = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $author$project$Main$Down = 1;\nvar $author$project$Main$Left = 2;\nvar $author$project$Main$Right = 3;\nvar $author$project$Main$Up = 0;\nvar $author$project$Main$directionDecoder = A2(\n\t$elm$json$Json$Decode$andThen,\n\tfunction (str) {\n\t\tswitch (str) {\n\t\t\tcase 'ArrowUp':\n\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t$elm$core$Maybe$Just(0));\n\t\t\tcase 'ArrowDown':\n\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t$elm$core$Maybe$Just(1));\n\t\t\tcase 'ArrowRight':\n\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t$elm$core$Maybe$Just(3));\n\t\t\tcase 'ArrowLeft':\n\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t$elm$core$Maybe$Just(2));\n\t\t\tdefault:\n\t\t\t\treturn $elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing);\n\t\t}\n\t},\n\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));\nvar $author$project$Main$handleSwipe = function (value) {\n\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Main$directionDecoder, value);\n\tif (!_v0.$) {\n\t\tvar maybeDirection = _v0.a;\n\t\treturn $author$project$Main$Move(maybeDirection);\n\t} else {\n\t\treturn $author$project$Main$Move($elm$core$Maybe$Nothing);\n\t}\n};\nvar $author$project$Main$keyDecoderToMoveMsg = A2($elm$json$Json$Decode$map, $author$project$Main$Move, $author$project$Main$directionDecoder);\nvar $elm$browser$Browser$Events$Document = 0;\nvar $elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {ax: pids, aH: subs};\n\t});\nvar $elm$browser$Browser$Events$init = $elm$core$Task$succeed(\n\tA2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));\nvar $elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar $elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\t$elm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar $elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, dict) {\n\t\t\t\tvar key = _v0.a;\n\t\t\t\tvar value = _v0.b;\n\t\t\t\treturn A3($elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\t$elm$core$Dict$empty,\n\t\tassocs);\n};\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {ap: event, P: key};\n\t});\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2($elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar $elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);\n\t});\nvar $elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _v6) {\n\t\t\t\tvar deads = _v6.a;\n\t\t\t\tvar lives = _v6.b;\n\t\t\t\tvar news = _v6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA3($elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_v4, pid, _v5) {\n\t\t\t\tvar deads = _v5.a;\n\t\t\t\tvar lives = _v5.b;\n\t\t\t\tvar news = _v5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _v2, _v3) {\n\t\t\t\tvar deads = _v3.a;\n\t\t\t\tvar lives = _v3.b;\n\t\t\t\tvar news = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3($elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);\n\t\tvar _v0 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.ax,\n\t\t\t$elm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _v0.a;\n\t\tvar livePids = _v0.b;\n\t\tvar makeNewPids = _v0.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\t$elm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\t$elm$core$Task$sequence(\n\t\t\t\t\tA2($elm$core$List$map, $elm$core$Process$kill, deadPids))));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (!_v0.$) {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _v0, state) {\n\t\tvar key = _v0.P;\n\t\tvar event = _v0.ap;\n\t\tvar toMessage = function (_v2) {\n\t\t\tvar subKey = _v2.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar node = _v3.a;\n\t\t\tvar name = _v3.b;\n\t\t\tvar decoder = _v3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2($elm$core$List$filterMap, toMessage, state.aH);\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar $elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar decoder = _v0.c;\n\t\treturn A3(\n\t\t\t$elm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2($elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);\nvar $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar $elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn $elm$browser$Browser$Events$subscription(\n\t\t\tA3($elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar $elm$browser$Browser$Events$onKeyDown = A2($elm$browser$Browser$Events$on, 0, 'keydown');\nvar $elm$json$Json$Decode$value = _Json_decodeValue;\nvar $author$project$Main$swipeDirectionArrow = _Platform_incomingPort('swipeDirectionArrow', $elm$json$Json$Decode$value);\nvar $author$project$Main$subscriptions = function (model) {\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$browser$Browser$Events$onKeyDown($author$project$Main$keyDecoderToMoveMsg),\n\t\t\t\t$author$project$Main$swipeDirectionArrow($author$project$Main$handleSwipe)\n\t\t\t]));\n};\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $author$project$Main$notMoved = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{G: false});\n};\nvar $author$project$Main$notNew = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{Z: false});\n};\nvar $author$project$Main$addTile = F2(\n\tfunction (gs, tile) {\n\t\tvar newGs = _Utils_update(\n\t\t\tgs,\n\t\t\t{H: gs.H + 1});\n\t\tvar newTiles = $author$project$Main$sortTilesByRowsCols(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t_Utils_update(\n\t\t\t\t\ttile,\n\t\t\t\t\t{P: gs.H}),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Main$changeTiles,\n\t\t\t\t\tA2($elm$core$Basics$composeR, $author$project$Main$notNew, $author$project$Main$notMoved),\n\t\t\t\t\tnewGs.a)));\n\t\treturn _Utils_update(\n\t\t\tnewGs,\n\t\t\t{a: newTiles});\n\t});\nvar $elm$browser$Browser$Navigation$load = _Browser_load;\nvar $author$project$Main$newGameState = function (gs) {\n\tvar newGs = $author$project$Main$defaultGameState;\n\treturn _Utils_update(\n\t\tnewGs,\n\t\t{w: gs.w});\n};\nvar $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;\nvar $author$project$Main$cacheGameState = _Platform_outgoingPort('cacheGameState', $elm$core$Basics$identity);\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $author$project$Main$gameStatusEncoder = function (status) {\n\tvar statusToStr = function () {\n\t\tswitch (status) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Playing';\n\t\t\tcase 1:\n\t\t\t\treturn 'Over';\n\t\t\tcase 2:\n\t\t\t\treturn 'Won';\n\t\t\tdefault:\n\t\t\t\treturn 'KeepPlaying';\n\t\t}\n\t}();\n\treturn $elm$json$Json$Encode$string(statusToStr);\n};\nvar $elm$json$Json$Encode$int = _Json_wrap;\nvar $elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, obj) {\n\t\t\t\t\tvar k = _v0.a;\n\t\t\t\t\tvar v = _v0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(0),\n\t\t\tpairs));\n};\nvar $elm$json$Json$Encode$list = F2(\n\tfunction (func, entries) {\n\t\treturn _Json_wrap(\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t_Json_addEntry(func),\n\t\t\t\t_Json_emptyArray(0),\n\t\t\t\tentries));\n\t});\nvar $elm$json$Json$Encode$bool = _Json_wrap;\nvar $author$project$Main$tileEncoder = function (tile) {\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'value',\n\t\t\t\t$elm$json$Json$Encode$int(tile.i)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'row',\n\t\t\t\t$elm$json$Json$Encode$int(tile.h)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'col',\n\t\t\t\t$elm$json$Json$Encode$int(tile.g)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'locIndex',\n\t\t\t\t$elm$json$Json$Encode$int(tile.R)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'new',\n\t\t\t\t$elm$json$Json$Encode$bool(tile.t)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'merged',\n\t\t\t\t$elm$json$Json$Encode$bool(tile.t)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'moved',\n\t\t\t\t$elm$json$Json$Encode$bool(tile.G)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'key',\n\t\t\t\t$elm$json$Json$Encode$int(tile.P))\n\t\t\t]));\n};\nvar $author$project$Main$tilesEncoder = function (tiles) {\n\treturn A2($elm$json$Json$Encode$list, $author$project$Main$tileEncoder, tiles);\n};\nvar $author$project$Main$gameStateEncoder = function (gs) {\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'tiles',\n\t\t\t\t$author$project$Main$tilesEncoder(gs.a)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'score',\n\t\t\t\t$elm$json$Json$Encode$int(gs.K)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'bestScore',\n\t\t\t\t$elm$json$Json$Encode$int(gs.w)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'status',\n\t\t\t\t$author$project$Main$gameStatusEncoder(gs.r)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'nextTileKey',\n\t\t\t\t$elm$json$Json$Encode$int(gs.H))\n\t\t\t]));\n};\nvar $author$project$Main$saveGameState = function (gs) {\n\treturn $author$project$Main$cacheGameState(\n\t\t$author$project$Main$gameStateEncoder(gs));\n};\nvar $elm$url$Url$addPort = F2(\n\tfunction (maybePort, starter) {\n\t\tif (maybePort.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar port_ = maybePort.a;\n\t\t\treturn starter + (':' + $elm$core$String$fromInt(port_));\n\t\t}\n\t});\nvar $elm$url$Url$addPrefixed = F3(\n\tfunction (prefix, maybeSegment, starter) {\n\t\tif (maybeSegment.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar segment = maybeSegment.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstarter,\n\t\t\t\t_Utils_ap(prefix, segment));\n\t\t}\n\t});\nvar $elm$url$Url$toString = function (url) {\n\tvar http = function () {\n\t\tvar _v0 = url.aB;\n\t\tif (!_v0) {\n\t\t\treturn 'http://';\n\t\t} else {\n\t\t\treturn 'https://';\n\t\t}\n\t}();\n\treturn A3(\n\t\t$elm$url$Url$addPrefixed,\n\t\t'#',\n\t\turl.aq,\n\t\tA3(\n\t\t\t$elm$url$Url$addPrefixed,\n\t\t\t'?',\n\t\t\turl.aC,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$url$Url$addPort,\n\t\t\t\t\turl.ay,\n\t\t\t\t\t_Utils_ap(http, url.as)),\n\t\t\t\turl.aw)));\n};\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Main$Normal = 0;\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $author$project$Main$maybeMoveTile = F3(\n\tfunction (t, c, r) {\n\t\tvar newpos = (!_Utils_eq(t.g, c)) || (!_Utils_eq(t.h, r));\n\t\treturn newpos ? _Utils_update(\n\t\t\tt,\n\t\t\t{g: c, G: true, h: r}) : t;\n\t});\nvar $author$project$Main$mergeTilesHelp = F4(\n\tfunction (checked, t1, t2, rest) {\n\t\tmergeTilesHelp:\n\t\twhile (true) {\n\t\t\tvar merge = function (t) {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tt,\n\t\t\t\t\t{t: true, i: t.i * 2});\n\t\t\t};\n\t\t\tif (rest.b) {\n\t\t\t\tif (rest.b.b) {\n\t\t\t\t\tvar t3 = rest.a;\n\t\t\t\t\tvar _v1 = rest.b;\n\t\t\t\t\tvar t4 = _v1.a;\n\t\t\t\t\tvar ts = _v1.b;\n\t\t\t\t\tif (_Utils_eq(t1.i, t2.i)) {\n\t\t\t\t\t\tvar $temp$checked = A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\t\tchecked),\n\t\t\t\t\t\t\t$temp$t1 = t3,\n\t\t\t\t\t\t\t$temp$t2 = t4,\n\t\t\t\t\t\t\t$temp$rest = ts;\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$checked = A2($elm$core$List$cons, t1, checked),\n\t\t\t\t\t\t\t$temp$t1 = t2,\n\t\t\t\t\t\t\t$temp$t2 = t3,\n\t\t\t\t\t\t\t$temp$rest = A2($elm$core$List$cons, t4, ts);\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar t3 = rest.a;\n\t\t\t\t\tif (_Utils_eq(t1.i, t2.i)) {\n\t\t\t\t\t\treturn $elm$core$List$reverse(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tt3,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\t\t\t\tchecked)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$checked = A2($elm$core$List$cons, t1, checked),\n\t\t\t\t\t\t\t$temp$t1 = t2,\n\t\t\t\t\t\t\t$temp$t2 = t3,\n\t\t\t\t\t\t\t$temp$rest = _List_Nil;\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _Utils_eq(t1.i, t2.i) ? $elm$core$List$reverse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\tchecked)) : $elm$core$List$reverse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tt2,\n\t\t\t\t\t\tA2($elm$core$List$cons, t1, checked)));\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Main$mergeTiles = function (tiles) {\n\tif (tiles.b && tiles.b.b) {\n\t\tvar t1 = tiles.a;\n\t\tvar _v1 = tiles.b;\n\t\tvar t2 = _v1.a;\n\t\tvar rest = _v1.b;\n\t\treturn A4($author$project$Main$mergeTilesHelp, _List_Nil, t1, t2, rest);\n\t} else {\n\t\treturn tiles;\n\t}\n};\nvar $author$project$Main$tilesInRows = F2(\n\tfunction (direction, tiles) {\n\t\tvar rowOrder = F2(\n\t\t\tfunction (t1, t2) {\n\t\t\t\treturn (_Utils_cmp(t1.h, t2.h) > 0) ? 2 : ((_Utils_cmp(t1.h, t2.h) < 0) ? 0 : 1);\n\t\t\t});\n\t\tvar sortedrow = function (row) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$sortWith,\n\t\t\t\trowOrder,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_eq(t.h, row);\n\t\t\t\t\t},\n\t\t\t\t\ttiles));\n\t\t};\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (list) {\n\t\t\t\tif (!direction) {\n\t\t\t\t\treturn $elm$core$Basics$identity(list);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$List$reverse(list);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn sortedrow(row);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$List$range, 1, 4)));\n\t});\nvar $author$project$Main$moveLeft = function (tiles) {\n\tvar squashLeft = function (ts) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, c) {\n\t\t\t\t\treturn A3($author$project$Main$maybeMoveTile, t, c, t.h);\n\t\t\t\t}),\n\t\t\tts,\n\t\t\tA2($elm$core$List$range, 1, 4));\n\t};\n\treturn $elm$core$List$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tsquashLeft,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$author$project$Main$mergeTiles,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tsquashLeft,\n\t\t\t\t\tA2($author$project$Main$tilesInRows, 0, tiles)))));\n};\nvar $author$project$Main$tilesInColumns = F2(\n\tfunction (direction, tiles) {\n\t\tvar colOrder = F2(\n\t\t\tfunction (t1, t2) {\n\t\t\t\treturn (_Utils_cmp(t1.g, t2.g) > 0) ? 2 : ((_Utils_cmp(t1.g, t2.g) < 0) ? 0 : 1);\n\t\t\t});\n\t\tvar sortedcol = function (col) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$sortWith,\n\t\t\t\tcolOrder,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_eq(t.g, col);\n\t\t\t\t\t},\n\t\t\t\t\ttiles));\n\t\t};\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (list) {\n\t\t\t\tif (!direction) {\n\t\t\t\t\treturn $elm$core$Basics$identity(list);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$List$reverse(list);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (column) {\n\t\t\t\t\treturn sortedcol(column);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$List$range, 1, 4)));\n\t});\nvar $author$project$Main$moveUp = function (tiles) {\n\tvar squashUp = function (ts) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, r) {\n\t\t\t\t\treturn A3($author$project$Main$maybeMoveTile, t, t.g, r);\n\t\t\t\t}),\n\t\t\tts,\n\t\t\tA2($elm$core$List$range, 1, 4));\n\t};\n\treturn $elm$core$List$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tsquashUp,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$author$project$Main$mergeTiles,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tsquashUp,\n\t\t\t\t\tA2($author$project$Main$tilesInColumns, 0, tiles)))));\n};\nvar $author$project$Main$movePossible = function (tiles) {\n\tvar can = function (move) {\n\t\treturn $author$project$Main$lessThenMax(\n\t\t\tmove(tiles));\n\t};\n\treturn can($author$project$Main$moveUp) || can($author$project$Main$moveLeft);\n};\nvar $author$project$Main$winningTileValue = 2048;\nvar $author$project$Main$gameStatus = function (gs) {\n\tvar gridFull = _Utils_eq(\n\t\t$elm$core$List$length(gs.a),\n\t\t$author$project$Main$maxTiles);\n\tvar anyWinningTile = A2(\n\t\t$elm$core$List$any,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.i;\n\t\t\t},\n\t\t\t$elm$core$Basics$eq($author$project$Main$winningTileValue)),\n\t\tgs.a);\n\tvar _v0 = gs.r;\n\tswitch (_v0) {\n\t\tcase 0:\n\t\t\treturn anyWinningTile ? 2 : (gridFull ? ($author$project$Main$movePossible(gs.a) ? 0 : 1) : 0);\n\t\tcase 3:\n\t\t\treturn gridFull ? ($author$project$Main$movePossible(gs.a) ? 3 : 1) : 3;\n\t\tdefault:\n\t\t\treturn gs.r;\n\t}\n};\nvar $author$project$Main$updateScoresAndGameStatus = function (gs) {\n\tvar lastMoveScore = A3(\n\t\t$elm$core$List$foldl,\n\t\t$elm$core$Basics$add,\n\t\t0,\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.i;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\tfunction (t) {\n\t\t\t\t\treturn t.t;\n\t\t\t\t},\n\t\t\t\tgs.a)));\n\tvar newScore = gs.K + lastMoveScore;\n\treturn _Utils_update(\n\t\tgs,\n\t\t{\n\t\t\tw: A2($elm$core$Basics$max, newScore, gs.w),\n\t\t\tK: newScore,\n\t\t\tr: $author$project$Main$gameStatus(gs)\n\t\t});\n};\nvar $author$project$Main$Reversed = 1;\nvar $author$project$Main$moveDown = function (tiles) {\n\tvar squashDown = function (ts) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, r) {\n\t\t\t\t\treturn A3($author$project$Main$maybeMoveTile, t, t.g, r);\n\t\t\t\t}),\n\t\t\tts,\n\t\t\t$elm$core$List$reverse(\n\t\t\t\tA2($elm$core$List$range, 1, 4)));\n\t};\n\treturn $elm$core$List$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tsquashDown,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$author$project$Main$mergeTiles,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tsquashDown,\n\t\t\t\t\tA2($author$project$Main$tilesInColumns, 1, tiles)))));\n};\nvar $author$project$Main$moveRight = function (tiles) {\n\tvar squashRight = function (ts) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, c) {\n\t\t\t\t\treturn A3($author$project$Main$maybeMoveTile, t, c, t.h);\n\t\t\t\t}),\n\t\t\tts,\n\t\t\t$elm$core$List$reverse(\n\t\t\t\tA2($elm$core$List$range, 1, 4)));\n\t};\n\treturn $elm$core$List$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tsquashRight,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$author$project$Main$mergeTiles,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tsquashRight,\n\t\t\t\t\tA2($author$project$Main$tilesInRows, 1, tiles)))));\n};\nvar $author$project$Main$GenerateNewTile = {$: 1};\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $elm$core$Process$sleep = _Process_sleep;\nvar $author$project$Main$userIsPlaying = function (status) {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn true;\n\t\tcase 3:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $author$project$Main$possibleNewTile = function (gs) {\n\tvar changed = A2(\n\t\t$elm$core$List$any,\n\t\tfunction (t) {\n\t\t\treturn t.G || t.t;\n\t\t},\n\t\tgs.a);\n\treturn $author$project$Main$userIsPlaying(gs.r) ? (changed ? A2(\n\t\t$elm$core$Task$perform,\n\t\t$elm$core$Basics$always($author$project$Main$GenerateNewTile),\n\t\t$elm$core$Process$sleep(100)) : $elm$core$Platform$Cmd$none) : $author$project$Main$saveGameState(gs);\n};\nvar $author$project$Main$notMerged = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{t: false});\n};\nvar $author$project$Main$updateGameState = F2(\n\tfunction (gs, func) {\n\t\tvar newGs = _Utils_update(\n\t\t\tgs,\n\t\t\t{\n\t\t\t\ta: $author$project$Main$sortTilesByRowsCols(\n\t\t\t\t\tfunc(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Main$changeTiles,\n\t\t\t\t\t\t\tA2($elm$core$Basics$composeR, $author$project$Main$notMerged, $author$project$Main$notMoved),\n\t\t\t\t\t\t\tgs.a)))\n\t\t\t});\n\t\treturn _Utils_update(\n\t\t\tnewGs,\n\t\t\t{\n\t\t\t\tr: $author$project$Main$gameStatus(newGs)\n\t\t\t});\n\t});\nvar $author$project$Main$updateWithMove = F2(\n\tfunction (model, direction) {\n\t\tvar playing = $author$project$Main$userIsPlaying(model.k.r);\n\t\tvar move = function () {\n\t\t\tswitch (direction) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn $author$project$Main$moveUp;\n\t\t\t\tcase 1:\n\t\t\t\t\treturn $author$project$Main$moveDown;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn $author$project$Main$moveLeft;\n\t\t\t\tdefault:\n\t\t\t\t\treturn $author$project$Main$moveRight;\n\t\t\t}\n\t\t}();\n\t\tvar newGs = A2($author$project$Main$updateGameState, model.k, move);\n\t\treturn playing ? _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{k: newGs}),\n\t\t\t$author$project$Main$possibleNewTile(newGs)) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tvar gs = model.k;\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar newGs = $author$project$Main$newGameState(gs);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{k: newGs}),\n\t\t\t\t\t$author$project$Main$generateNewTile(newGs.a));\n\t\t\tcase 1:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Main$generateNewTile(gs.a));\n\t\t\tcase 2:\n\t\t\t\tvar tile = msg.a;\n\t\t\t\tvar newGs = $author$project$Main$updateScoresAndGameStatus(\n\t\t\t\t\tA2($author$project$Main$addTile, gs, tile));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{k: newGs}),\n\t\t\t\t\t$author$project$Main$lessThenTwo(newGs.a) ? $author$project$Main$generateNewTile(newGs.a) : $author$project$Main$saveGameState(newGs));\n\t\t\tcase 3:\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{r: 3});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{k: newGs}),\n\t\t\t\t\t$author$project$Main$saveGameState(newGs));\n\t\t\tcase 4:\n\t\t\t\tvar maybeDirection = msg.a;\n\t\t\t\tif (!maybeDirection.$) {\n\t\t\t\t\tvar direction = maybeDirection.a;\n\t\t\t\t\treturn A2($author$project$Main$updateWithMove, model, direction);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 5:\n\t\t\t\tvar urlRequest = msg.a;\n\t\t\t\tif (!urlRequest.$) {\n\t\t\t\t\tvar url = urlRequest.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\tmodel.ae,\n\t\t\t\t\t\t\t$elm$url$Url$toString(url)));\n\t\t\t\t} else {\n\t\t\t\t\tvar href = urlRequest.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t$elm$browser$Browser$Navigation$load(href));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar url = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{ak: url}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $author$project$Main$NewGame = {$: 0};\nvar $elm$html$Html$button = _VirtualDom_node('button');\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $elm$html$Html$strong = _VirtualDom_node('strong');\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $author$project$Main$aboveGame = A2(\n\t$elm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('above-game')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('game-intro')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('Join the numbers and get to the '),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$strong,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text('2048 tile!')\n\t\t\t\t\t\t]))\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$elm$html$Html$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('restart-button'),\n\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$NewGame)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('New Game')\n\t\t\t\t]))\n\t\t]));\nvar $elm$html$Html$hr = _VirtualDom_node('hr');\nvar $author$project$Main$divider = A2($elm$html$Html$hr, _List_Nil, _List_Nil);\nvar $author$project$Main$gameExplanation = A2(\n\t$elm$html$Html$p,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('game-explanation')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$html$Html$strong,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('important')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('How to play: ')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('Use your '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$strong,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('arrow keys')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text(' or swipe on a touch screen to move the tiles. '),\n\t\t\t$elm$html$Html$text('When two tiles with the same number touch, they '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$strong,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('merge into one!')\n\t\t\t\t]))\n\t\t]));\nvar $elm$html$Html$a = _VirtualDom_node('a');\nvar $elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\t$elm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');\nvar $author$project$Main$gameFooter = A2(\n\t$elm$html$Html$p,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('game-explanation')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$text('Original 2048 created by '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$href('http://gabrielecirulli.com'),\n\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('Gabriele Cirulli. ')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('Based on '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$href('https://itunes.apple.com/us/app/1024!/id823499224'),\n\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('1024 by Veewo Studio ')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('and conceptually similar to '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$href('http://asherv.com/threes/'),\n\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('Threes by Asher Vollmer.')\n\t\t\t\t]))\n\t\t]));\nvar $elm$html$Html$h1 = _VirtualDom_node('h1');\nvar $author$project$Main$gameHeader = function (gs) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('heading')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$h1,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('title')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text('Elm 2048')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('scores-container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('score-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t$elm$core$String$fromInt(gs.K))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('best-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t$elm$core$String$fromInt(gs.w))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$KeepGoing = {$: 3};\nvar $author$project$Main$gameStatusClassStr = function (gs) {\n\tvar _v0 = gs.r;\n\tswitch (_v0) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 3:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn ' game-over ';\n\t\tdefault:\n\t\t\treturn ' game-won';\n\t}\n};\nvar $author$project$Main$gameStatusMessage = function (gs) {\n\tvar _v0 = gs.r;\n\tswitch (_v0) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 3:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn 'Game Over';\n\t\tdefault:\n\t\t\treturn 'You Won';\n\t}\n};\nvar $author$project$Main$gameMessage = function (gs) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t'game-message' + $author$project$Main$gameStatusClassStr(gs))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$p,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t$author$project$Main$gameStatusMessage(gs))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('lower')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('keep-playing-button'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$KeepGoing)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Keep going')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('retry-button'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$NewGame)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Try again')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$gameNotes = A2(\n\t$elm$html$Html$p,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('game-explanation')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$html$Html$strong,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('important')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('Note: ')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('This is not the official version of 2048! It is an '),\n\t\t\t$elm$html$Html$text('implementation of Gabriele Cirulli\\'s '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$href('https://github.com/gabrielecirulli/2048'),\n\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('2048 game ')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('written in '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$href('https://elm-lang.org/')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('Elm')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('. You can find the code for this Elm implementation here: '),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$href('https://github.com/stepheneb/elm-2048'),\n\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('github.com/stepheneb/elm-2048')\n\t\t\t\t])),\n\t\t\t$elm$html$Html$text('. ')\n\t\t]));\nvar $author$project$Main$gridRow = A2(\n\t$elm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('grid-row')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]));\nvar $author$project$Main$gridContainer = A2(\n\t$elm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('grid-container')\n\t\t]),\n\t_List_fromArray(\n\t\t[$author$project$Main$gridRow, $author$project$Main$gridRow, $author$project$Main$gridRow, $author$project$Main$gridRow]));\nvar $elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;\nvar $elm$html$Html$Lazy$lazy = $elm$virtual_dom$VirtualDom$lazy;\nvar $author$project$Main$mergedTileClassStr = function (t) {\n\treturn t.t ? ' tile-merged ' : '';\n};\nvar $author$project$Main$newTileClassStr = function (t) {\n\treturn t.Z ? ' tile-new ' : '';\n};\nvar $author$project$Main$superTileClassStr = function (t) {\n\treturn (_Utils_cmp(t.i, $author$project$Main$winningTileValue) > 0) ? ' tile-super ' : '';\n};\nvar $author$project$Main$tileClassStr = function (t) {\n\tvar classStr = A2(\n\t\t$elm$core$String$join,\n\t\t' ',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t'tile',\n\t\t\t\t'tile-' + $elm$core$String$fromInt(t.i),\n\t\t\t\t'tile-position-' + ($elm$core$String$fromInt(t.g) + ('-' + $elm$core$String$fromInt(t.h)))\n\t\t\t]));\n\treturn _Utils_ap(\n\t\tclassStr,\n\t\t_Utils_ap(\n\t\t\t$author$project$Main$newTileClassStr(t),\n\t\t\t_Utils_ap(\n\t\t\t\t$author$project$Main$mergedTileClassStr(t),\n\t\t\t\t$author$project$Main$superTileClassStr(t))));\n};\nvar $author$project$Main$singleTile = function (t) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t$author$project$Main$tileClassStr(t))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('tile-inner')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t$elm$core$String$fromInt(t.i))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$singleKeyedTile = function (t) {\n\treturn _Utils_Tuple2(\n\t\t$elm$core$String$fromInt(t.P),\n\t\tA2($elm$html$Html$Lazy$lazy, $author$project$Main$singleTile, t));\n};\nvar $author$project$Main$listOfTiles = function (tiles) {\n\treturn A2($elm$core$List$map, $author$project$Main$singleKeyedTile, tiles);\n};\nvar $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$html$Html$Keyed$node = $elm$virtual_dom$VirtualDom$keyedNode;\nvar $author$project$Main$tileContainer = function (tiles) {\n\treturn A3(\n\t\t$elm$html$Html$Keyed$node,\n\t\t'div',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('tile-container')\n\t\t\t]),\n\t\t$author$project$Main$listOfTiles(tiles));\n};\nvar $author$project$Main$view = function (model) {\n\treturn {\n\t\taN: _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$Main$gameHeader(model.k),\n\t\t\t\t\t\t$author$project$Main$aboveGame,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('game-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Main$gameMessage(model.k),\n\t\t\t\t\t\t\t\t$author$project$Main$gridContainer,\n\t\t\t\t\t\t\t\t$author$project$Main$tileContainer(model.k.a)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$author$project$Main$gameExplanation,\n\t\t\t\t\t\t$author$project$Main$divider,\n\t\t\t\t\t\t$author$project$Main$gameNotes,\n\t\t\t\t\t\t$author$project$Main$divider,\n\t\t\t\t\t\t$author$project$Main$gameFooter\n\t\t\t\t\t]))\n\t\t\t]),\n\t\ta1: 'Elm 2048'\n\t};\n};\nvar $author$project$Main$main = $elm$browser$Browser$application(\n\t{aV: $author$project$Main$init, aY: $author$project$Main$UrlChanged, aZ: $author$project$Main$LinkClicked, a0: $author$project$Main$subscriptions, a2: $author$project$Main$update, a3: $author$project$Main$view});\n_Platform_export({'Main':{'init':$author$project$Main$main($elm$json$Json$Decode$value)(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default function touchInputManager(app) {\n  new TouchInputManager(app);\n}\n\nfunction TouchInputManager(app) {\n  this.events = {};\n  this.app = app;\n\n  if (window.navigator.msPointerEnabled) {\n    //Internet Explorer 10 style\n    this.eventTouchstart = \"MSPointerDown\";\n    this.eventTouchmove = \"MSPointerMove\";\n    this.eventTouchend = \"MSPointerUp\";\n  } else {\n    this.eventTouchstart = \"touchstart\";\n    this.eventTouchmove = \"touchmove\";\n    this.eventTouchend = \"touchend\";\n  }\n\n  this.listen();\n}\n\nTouchInputManager.prototype.listen = function () {\n  var self = this;\n\n  // Respond to swipe events\n  var touchStartClientX, touchStartClientY;\n  var gridContainer = document.getElementsByClassName(\"grid-container\")[0];\n\n  gridContainer.addEventListener(this.eventTouchstart, function (event) {\n    if ((!window.navigator.msPointerEnabled && event.touches.length > 1) ||\n      event.targetTouches.length > 1) {\n      return; // Ignore if touching with more than 1 finger\n    }\n\n    if (window.navigator.msPointerEnabled) {\n      touchStartClientX = event.pageX;\n      touchStartClientY = event.pageY;\n    } else {\n      touchStartClientX = event.touches[0].clientX;\n      touchStartClientY = event.touches[0].clientY;\n    }\n\n    event.preventDefault();\n  });\n\n  gridContainer.addEventListener(this.eventTouchmove, function (event) {\n    event.preventDefault();\n  });\n\n  gridContainer.addEventListener(this.eventTouchend, function (event) {\n    if ((!window.navigator.msPointerEnabled && event.touches.length > 0) ||\n      event.targetTouches.length > 0) {\n      return; // Ignore if still touching with one or more fingers\n    }\n\n    var touchEndClientX, touchEndClientY;\n\n    if (window.navigator.msPointerEnabled) {\n      touchEndClientX = event.pageX;\n      touchEndClientY = event.pageY;\n    } else {\n      touchEndClientX = event.changedTouches[0].clientX;\n      touchEndClientY = event.changedTouches[0].clientY;\n    }\n\n    var dx = touchEndClientX - touchStartClientX;\n    var absDx = Math.abs(dx);\n\n    var dy = touchEndClientY - touchStartClientY;\n    var absDy = Math.abs(dy);\n\n    if (Math.max(absDx, absDy) > 10) {\n      var direction = absDx > absDy ?\n        (dx > 0 ? \"ArrowRight\" : \"ArrowLeft\") :\n        (dy > 0 ? \"ArrowDown\" : \"ArrowUp\");\n      self.app.ports.swipeDirectionArrow.send({ key: direction });\n\n    }\n  });\n};\n","/*jshint esversion: 6 */\n\nimport './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\nimport touchInputManager from './touchInputManager';\n\n//  localStorage\nconst storageKey = \"elm2048\";\n\nconst getItem = () => JSON.parse(localStorage.getItem(storageKey));\n\nconst setItem = (data) => localStorage.setItem(storageKey, JSON.stringify(data));\n\nconst gameState = getItem();\n\nvar app = Elm.Main.init({\n  node: document.getElementById('root'),\n  flags: gameState\n});\n\napp.ports.cacheGameState.subscribe(function (data) {\n  setItem(data);\n});\n\nregisterServiceWorker();\ntouchInputManager(app);\n\nwindow.addEventListener(\"keydown\", event => {\n  if (event.key.includes(\"Arrow\")) {\n    event.preventDefault();\n  }\n});\n"],"sourceRoot":""}